import com.moowork.gradle.node.task.NodeTask
group 'com.zpi'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:0.12'
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: "com.moowork.node"

node {
    version = '7.0.0'
    npmVersion = '3.10.8'
    download = true
}

archivesBaseName = "zpi"
version '1.0'
applicationName = "zpi"
mainClassName = "Main"

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.sparkjava:spark-core:2.3'
    compile 'com.sparkjava:spark-template-freemarker:2.3'
    compile 'org.mongodb:mongo-java-driver:3.0.2'
    compile 'org.pac4j:pac4j:1.9.3'
    compile 'org.pac4j:pac4j-http:1.9.3'
    compile 'org.pac4j:pac4j-mongo:1.9.3'
    compile 'org.pac4j:pac4j-oauth:1.9.4'
    compile 'org.pac4j:pac4j-jwt:1.9.4'
    compile 'org.pac4j:spark-pac4j:1.2.2'
    compile 'ch.qos.logback:logback-core:1.1.3'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'de.rtner:PBKDF2:1.1.0'
    testCompile 'junit:junit:4.11'
}

defaultTasks = ['clean']
task stage(dependsOn: ['clean', 'installApp'])


task webpack(type: NodeTask, dependsOn: 'npmInstall') {
    def osName = System.getProperty("os.name").toLowerCase();
    if (osName.contains("windows")) {
        script = project.file('node_modules/webpack/bin/webpack.js')
    } else {
        script = project.file('node_modules/.bin/webpack')
    }
}

processResources.dependsOn 'webpack'

clean.delete << file('node_modules')